Y <- DATA$Gasto.en.comida
X <- DATA[,3]
X<-cbind(rep(1,N),DATA$Gasto.total)
betas<-solve(t(X)%*%X)%*%(t(X)%*%Y)
betas
beta1 <- betas[1,1]
beta2 <- betas[2,1]
beta1
beta2
View(X)
# Check
lm(Y~DATA$Gasto.total)
summary(lm(Y~DATA$Gasto.total)) #Prestar atención test t
# Estimamos Y junto con los residuos
Y_est <- beta1+beta2*DATA$Gasto.total
e_est <- Y-Y_est
S2_e <- sum(e_est^2)/(N-2)
Observación <- DATA$Observación
Residuos <- e_est
plot(Observación,Residuos,type = 'l',col="red")
plot(DATA$Gasto.total,e_est,type = 'p',col="red",pch=16,
xlab = "Gasto total", ylab = "Residuos") +
abline(h=mean(e_est),lty=1,col="black") +
abline(v=600,lty=5,col="blue")
e2<-e_est^2
plot(DATA$Gasto.total,e2,type = 'p',col="red",pch=16,
xlab = "Gasto total", ylab = "Residuos al cuadrado") +
abline(v=600,lty=5,col="blue")
#Relación positiva con el valor del gasto
plot(DATA$Gasto.total,DATA$Gasto.en.comida,type = 'p',col="orange",pch=16,
xlab = "Gasto total", ylab = "Gasto en comida") +
abline(a = beta1, b = beta2, lty = 1,lwd = 2,col="black")
N*(1-0.20)/2 #Nos quedamos con estas observaciones de cada lado
#Separamos en dos muestras (Notar que los datos de Gasto total
# ya vienen ordenados)
X_1 <- X[1:22,]
X_2 <- X[(N-21):N,]
Y_1 <- Y[1:22]
Y_2 <- Y[(N-21):N]
#Estimamos
betas1 <- solve(t(X_1)%*%X_1)%*%(t(X_1)%*%Y_1)
betas2 <- solve(t(X_2)%*%X_2)%*%(t(X_2)%*%Y_2)
betas1;betas2
N*(1-0.20)/2 #Nos quedamos con estas observaciones de cada lado
X_1 <- X[1:22,]
X_2 <- X[(N-21):N,]
Y_1 <- Y[1:22]
Y_2 <- Y[(N-21):N]
#Estimamos
betas1 <- solve(t(X_1)%*%X_1)%*%(t(X_1)%*%Y_1)
betas2 <- solve(t(X_2)%*%X_2)%*%(t(X_2)%*%Y_2)
betas1;betas2
#Sumas de residuos
ESS_B <- sum((Y_1-X_1%*%betas1)^2) # Notar que X_1%*%betas1 es el Y est
ESS_A <- sum((Y_2-X_2%*%betas2)^2)
ESS_A;ESS_B
Fe_GQ = ESS_A/ESS_B
Fe_GQ
d <- length(Y_1)/2
k <- length(betas1)
gl=(N-d-2*k)/2
Fc_GQ <- qf(1-alpha,gl,gl)
Fc_GQ
Fe_GQ > Fc_GQ # Rechaza Ho, se ha encontrado evidencia de
# Si analizamos el pvalor llegamos a la misma conclusion
pvalue_Fe_GQ <- pf(Fe_GQ,gl,gl,lower.tail = FALSE) #(Pedimos cola
# Si analizamos el pvalor llegamos a la misma conclusion
pvalue_Fe_GQ <- pf(Fe_GQ,gl,gl,lower.tail = FALSE) #(Pedimos cola
# derecha)
# O también podemos hacer
pvalue_Fe_GQ <- 1-pf(Fe_GQ,gl,gl) # sin indicar cola derecha
pvalue_Fe_GQ
pvalue_Fe_GQ < alpha # Rechaza Ho, se ha encontrado evidencia de
## Paso 1: obtenemos los residuos al cuadrado de la regresion original
e_est_2 <- e_est^2
## Paso 2: calculamos la varianza del error
N <- length(Y)
k <- length(betas)
sigma2_e <- sum(e_est_2)/(N-k)
## Paso 3: calculamos la variable dependiente de la regresion auxiliar
# (Z)
Z <- e_est_2/sigma2_e
## Paso 4: estimamos la regresion auxiliar de la prueba
delta <- solve(t(X)%*%X)%*%(t(X)%*%Z)
delta
## Paso 5: calculamos la suma de cuadrados explicada (RSS) de la
# regresion auxiliar
Z_est <- X%*%delta
RSS_aux <- sum((Z_est-mean(Z))^2)
## Paso 6: calculamos el estadistico empirico de la prueba
Chi2e_BP <- RSS_aux/2
Chi2e_BP
k <- length(delta)
gl_BP <- k-1
Chi2c_BP <- qchisq(1-alpha,gl_BP)
Chi2c_BP
Chi2e_BP > Chi2c_BP # Rechaza Ho, se ha encontrado evidencia de
pvalue_Chi2e_BP=1-pchisq(Chi2e_BP,gl_BP)
pvalue_Chi2e_BP
pvalue_Chi2e_BP < alpha # Rechaza Ho, se ha encontrado evidencia de
## Paso 2: estimamos la regresion auxiliar de la prueba de White
Y_W <- e_est_2
## Paso 2: estimamos la regresion auxiliar de la prueba de White
Y_W <- e_est_2
X_W <- cbind(X,(DATA$Gasto.total)^2)
delta_W <- solve(t(X_W)%*%X_W)%*%(t(X_W)%*%Y_W)
## Paso 3: obtenemos el R cuadrado de la regresion auxiliar
Y_W_est <- X_W%*%delta_W
TSS <- t(Y_W)%*%Y_W-N*(mean(Y_W)^2)
ESS <- sum((Y_W-Y_W_est)^2)
RSS <- sum((Y_W_est-mean(Y_W))^2)
# R2
R2_W <-(1-ESS/TSS)
R2_W <- RSS/TSS
R2_W
## Paso 4: calculamos el estadistico empirico
N <- length(Y_W)
Chi2e_W <- N*R2_W
Chi2e_W
gl_W <- length(delta_W)-1 # recordar que el p = gl_W no incluye el
Chi2c_W <- qchisq(1-alpha,gl_W)
Chi2c_W
Chi2e_W > Chi2c_W # Rechaza Ho, se ha encontrado evidencia de
pvalue_Chi2e_W <- 1-pchisq(Chi2e_W,gl_W)
pvalue_Chi2e_W
pvalue_Chi2e_W < alpha # Rechaza Ho, se ha encontrado evidencia de
robust <- solve(t(X)%*%X) %*%
(t(X) %*%diag(diag(e_est %*% t(e_est))) %*% X) %*%
solve(t(X)%*%X) #diag toma la diagonal principal
robust[2,2]
robust
# Notar tambien que robust es la matriz de varianzas y covarianzas
# corregidas por heterocedasticidad o la matriz de var y cov con las
# desviaciones corregidas por White
#k<-2
desv_White <- robust[2,2]^(1/2)
desv_tradi <- (sum(e_est^2)/(N-k)*solve(t(X)%*%X)[2,2])^(1/2)
# Notar tambien que robust es la matriz de varianzas y covarianzas
# corregidas por heterocedasticidad o la matriz de var y cov con las
# desviaciones corregidas por White
#k<-2
desv_White <- robust[2,2]^(1/2) #(tomo la posicion 2,2 que es de beta2)
desv_tradi <- (sum(e_est^2)/(N-k)*solve(t(X)%*%X)[2,2])^(1/2)
desv_White;desv_tradi
te_White <- (beta2-0)/desv_White
te_tradi <- (beta2-0)/desv_tradi
tc <- qt(1-alpha/2,N-k)
abs(te_White) > abs(tc) # Rechaza Ho, beta2 es significativa
abs(te_tradi) > abs(tc) # Rechaza Ho, beta2 es significativa
# Check
modelo = lm(Y~DATA$Gasto.total)
dwtest(modelo)
library(lmtest)
dwtest(modelo)
?dwtest
qchisq(.95, 2)
qchisq(1-.95, 2)
qchisq(.95, 3)
qchisq(.95, 2)
qchisq(.95, 1)
qt(0.95, 8)
qt(1-0.95, 8)
qt(0.95, 6)
qt(0.95, 2)
qt(0.95, 3)
qt(0.95, 4)
qt(0.975, 4)
qt(0.975, 3)
qt(0.975, 2)
qt(0.975, 6)
qt(0.975, 8)
qchisq(0.95, 2)
90356.30 - 100 * 22.092 * 29.9834
136657.78-100*(29.9834^2)
24116.97/46757.35
22.092 - 0.5158 * 29.9834
39251.83/25400.25
qf(0.95, 100-20-2*1, 100-20-2)
100-20-2
qf(0.95, 78, 78)
1967-1929+1
(0.04338-0.03891)/2
0.03891/(39-5)
0.002235/0.001144412
qf(1.952968, 2, 34)
qf(0.95, 2, 34)
qchisq(0.95, 500-2)
qchisq(0.95, 2)
qchisq(0.95,2)
22.092^2
2209.20 - 2 * 22.092 * 2209.20 + 100 * 488.0565
2209.20 - 2 * 22.092 * 2209.20 + 100 * 488.0565
2209.20 + 2 * 22.092 * 2209.20 + 100 * 488.0565
15076.65/148626
1-.1014402
library(tidyverse)
library(dplyr)
library(tidyr)
library(reshape2)
library(patchwork)
library(knitr)
library(kableExtra)
library(scales)
#library(gt)
#source('~/Google Drive/analisis financieros/functions/alphacast.R')
options(knitr.table.format = "html")
#Vamos a agregar la función de colorización acá
colorize <- function(x, color) {
if (knitr::is_latex_output()) {
sprintf("\\textcolor{%s}{%s}", color, x)
} else if (knitr::is_html_output()) {
sprintf("<span style='color: %s;'>%s</span>", color,
x)
} else x
}
# (`r colorize("sin comisiones", "red")`) .
```
```{r data, echo=FALSE, message=FALSE, warning=FALSE, tidy=TRUE}
source('~/Google Drive/analisis financieros/mep/mep.R')
source('~/Google Drive/analisis financieros/ccl/ccl/ccl.R')
comienzoSemana = as.Date("2022-01-03")
finSemana = as.Date("2022-01-07")
mepal30 <- read_csv('~/Google Drive/analisis financieros/mep/mep-AL30.csv')
mepgd30 <- read_csv('~/Google Drive/analisis financieros/mep/mep-GD30.csv')
mep <- left_join(mepal30, mepgd30, by ='fecha') %>% select(fecha, mep.x, mep.y)
colnames(mep) <- c('fecha', 'MEP-AL30', 'MEP-GD30')
ccl <- returnCcl(graba = FALSE, lookBack = 380)
ccl <- drop_na(ccl)
c = ccl
ccl = ccl %>% filter(fecha >= '2020-12-30')
al30 <- read_csv('~/Google Drive/analisis financieros/mep/AL30.csv')
al30d <- read_csv('~/Google Drive/analisis financieros/mep/AL30D.csv')
gd30 <- read_csv('~/Google Drive/analisis financieros/mep/GD30.csv')
gd30d <- read_csv('~/Google Drive/analisis financieros/mep/GD30D.csv')
pesos <- left_join(al30, gd30, by = 'fecha') %>% select(fecha, cierre.x, cierre.y)
colnames(pesos) <- c('fecha', 'AL30', 'GD30')
dolares <- left_join(al30d, gd30d, by = 'fecha') %>% select(fecha, cierre.x, cierre.y)
colnames(dolares) <- c('fecha', 'AL30D', 'GD30D')
spread = left_join(al30d, gd30d, by = 'fecha') %>% mutate(spread = cierre.x / cierre.y) %>% select(fecha, -cierre.x, -cierre.y, spread) %>% drop_na()
mep_ccl <- left_join(mep, ccl, by = 'fecha')
mep_ccl <- drop_na(mep_ccl)
min_fecha = max(mep_ccl %>% slice(which.min(fecha)) %>% pull(fecha),dolares %>% slice(which.min(fecha)) %>% pull(fecha) )
dolares = dolares %>% filter(fecha >= min_fecha)
pesos = pesos %>% filter(fecha >= min_fecha)
mep_ccl = mep_ccl %>% filter(fecha >= min_fecha)
graf_mep_ccl <- mep_ccl %>%
melt(id='fecha') %>%
group_by(fecha) %>%
ggplot(aes(x = fecha, y = value, colour = variable)) +
geom_line() +
#theme_economist() +
scale_x_date(date_breaks="1 month", date_labels="%Y %m") +
scale_colour_discrete("Activos") +
#scale_color_economist() +
labs(title = "MEP / CCL.",
y = "calculado con precios de Cierre", x = "") + #theme(legend.position = c(0.85, 0.1)) +
geom_vline(xintercept = as.numeric(comienzoSemana), linetype = 4) +
theme(axis.text.x = element_text(angle = 45)) +
scale_y_continuous(breaks = breaks_extended(20)) #+
graf_mep_ccl
minal30 = al30 %>% slice(which.min(cierre)) %>% pull(cierre)
minal30d = al30d %>% slice(which.min(cierre)) %>% pull(cierre)
mingd30 = gd30 %>% slice(which.min(cierre)) %>% pull(cierre)
mingd30d = gd30d %>% slice(which.min(cierre)) %>% pull(cierre)
graf_cot_pesos <- pesos %>%
melt(id='fecha') %>%
filter(variable == 'AL30' | variable == 'GD30') %>%
group_by(fecha) %>%
ggplot(aes(x = fecha, y = value, colour = variable)) +
scale_colour_discrete("Bono")+
geom_line() +
#theme_economist() +
scale_x_date(date_breaks="1 month", date_labels="%Y %m") +
#scale_color_economist() +
labs(title = "AL30, GD30 en Pesos",
y = "", x = "") + #theme(legend.position = c(0.85, .85)) +
geom_hline(yintercept=min(minal30, mingd30), linetype="dashed",
color = "red", size=0.5) +
geom_vline(xintercept = as.numeric(comienzoSemana), linetype = 4) +
theme(axis.text.x = element_text(angle = 45))
graf_cot_pesos
graf_cot_dolares <- dolares %>%
melt(id='fecha') %>%
filter(variable == 'AL30D' | variable == 'GD30D') %>%
group_by(fecha) %>%
ggplot(aes(x = fecha, y = value, colour = variable)) +
scale_colour_discrete("Bono") +
geom_line() +
scale_x_date(date_breaks="1 month", date_labels="%Y %m") +
labs(title = "AL30D, GD30D en USD", y = "", x = "") + theme(legend.position = "none") +
geom_hline(yintercept=min(minal30d, mingd30d), linetype="dashed",
color = "red", size=0.5) +
geom_vline(xintercept = as.numeric(comienzoSemana), linetype = 4) +
theme(axis.text.x = element_text(angle = 45))
graf_cot_dolares
graf_Spread = spread %>%
group_by(fecha) %>%
ggplot(aes(x = fecha, y=spread)) +
geom_line() +
labs(title = "Spread AL30 / GD30", x = '') + geom_hline(yintercept = 1, linetype="dashed", color = "red") +
geom_vline(xintercept = as.numeric(comienzoSemana), linetype = 4)
graf_Spread
varSemanal = mep_ccl %>% filter(fecha == comienzoSemana - 5 | fecha == finSemana) %>%
mutate(varAL = format((`MEP-AL30` / lag(`MEP-AL30`) - 1) * 100, digits = 3),
varGD = format((`MEP-GD30` / lag(`MEP-GD30`) - 1) * 100, digits = 3),
varCCL = format((CCL / lag(CCL) - 1) * 100, digits = 3)) %>%
filter(fecha == finSemana) %>%
select(varAL, varGD, varCCL)
varAnual = mep_ccl %>% filter(fecha == '2020-12-30' | fecha == finSemana) %>%
mutate(varAL = format((`MEP-AL30` / lag(`MEP-AL30`) - 1) * 100, digits = 4),
varGD = format((`MEP-GD30` / lag(`MEP-GD30`) - 1) * 100, digits = 4),
varCCL = format((CCL / lag(CCL) - 1) * 100, digits = 4)) %>%
filter(fecha == finSemana) %>%
select(varAL, varGD, varCCL)
ultimosValores = mep_ccl %>% filter(fecha == finSemana) %>% select(`MEP-AL30`, `MEP-GD30`, CCL)
ultAL30 = as.numeric(format(ultimosValores$`MEP-AL30`, digits = 5))
ultGD30 = as.numeric(format(ultimosValores$`MEP-GD30`, digits = 5))
ultCCL = as.numeric(format(ultimosValores$CCL, digits = 5))
valInicioSem = mep_ccl %>% filter(fecha == (comienzoSemana - 3)) %>% select(`MEP-AL30`, `MEP-GD30`, CCL)
inicAL30 = as.numeric(format(valInicioSem$`MEP-AL30`, digits = 5))
inicGD30 = as.numeric(format(valInicioSem$`MEP-GD30`, digits = 5))
inicCCL = as.numeric(format(valInicioSem$CCL, digits = 5))
library(tidyquant)
source('~/Google Drive/analisis financieros/functions/merval.R')
mervalCCL = returnMervalCCL('2020-12-30')
merval = returnMerval('2020-12-30')
#### MERVAL en ccl
gmervalCCL = mervalCCL %>% drop_na() %>%
ggplot(aes(x = fecha, y = mervalCcl)) +
geom_line() +
theme_tq()  +
labs(title = "MERVAL en CCL (prom)",
subtitle = 'Calculado con promedio de 4 activos (GBYE). Linea roja elecciones PASO',
y = "", x = "") +
theme_economist() + labs(color = "") + scale_y_continuous(labels = comma)+
geom_vline(xintercept = as.Date('2021-09-12'), color = 'red', size = 1)
#### MERVAL en ccl
gmervalCCL = mervalCCL %>% drop_na() %>%
ggplot(aes(x = fecha, y = mervalCcl)) +
geom_line() +
theme_tq()  +
labs(title = "MERVAL en CCL (prom)",
subtitle = 'Calculado con promedio de 4 activos (GBYE). Linea roja elecciones PASO',
y = "", x = "") +
theme_economist() + labs(color = "") + scale_y_continuous(labels = comma)+
geom_vline(xintercept = as.Date('2021-09-12'), color = 'red', size = 1)
gmervalCCL
#### MERVAL en ccl
gmervalCCL = mervalCCL %>% drop_na() %>%
ggplot(aes(x = fecha, y = mervalCcl)) +
geom_line() +
theme_tq()  +
labs(title = "MERVAL en CCL (prom)",
subtitle = 'Calculado con promedio de 4 activos (GBYE). Linea roja elecciones PASO',
y = "", x = "") +
theme_economist() + labs(color = "") + scale_y_continuous(labels = comma)#+
gmervalCCL
gmervalPesos = merval %>% drop_na() %>%
ggplot(aes(x = fecha, y = cierre)) +
geom_line() +
theme_tq()  +
labs(title = "MERVAL en PESOS",
subtitle = 'Linea roja elecciones PASO',
y = "", x = "") +
theme_economist() + labs(color = "") + scale_y_continuous(labels = comma, breaks = breaks_extended(15))#+
gmervalPesos = merval %>% drop_na() %>%
gmervalPesos = merval %>% drop_na() %>%
ggplot(aes(x = fecha, y = cierre)) +
geom_line() +
theme_tq()  +
labs(title = "MERVAL en PESOS",
subtitle = 'Linea roja elecciones PASO',
y = "", x = "") +
theme_economist() + labs(color = "") + scale_y_continuous(labels = comma, breaks = breaks_extended(15))#+
gmervalPesos
gmervalPesos = merval %>% drop_na() %>%
ggplot(aes(x = fecha, y = cierre)) +
geom_line() +
theme_tq()  +
labs(title = "MERVAL en PESOS",
subtitle = '',
y = "", x = "") +
theme_economist() + labs(color = "") + scale_y_continuous(labels = comma, breaks = breaks_extended(15))#+
#### MERVAL en ccl
gmervalCCL = mervalCCL %>% drop_na() %>%
ggplot(aes(x = fecha, y = mervalCcl)) +
geom_line() +
theme_tq()  +
labs(title = "MERVAL en CCL (prom)",
subtitle = 'Calculado con promedio de 4 activos (GBYE).',
y = "", x = "") +
theme_economist() + labs(color = "") + scale_y_continuous(labels = comma)#+
gmervalPesos = merval %>% drop_na() %>%
ggplot(aes(x = fecha, y = cierre)) +
geom_line() +
theme_tq()  +
labs(title = "MERVAL en PESOS",
subtitle = '',
y = "", x = "") +
theme_economist() + labs(color = "") + scale_y_continuous(labels = comma, breaks = breaks_extended(15))#+
kbl(mep_ccl %>% filter (fecha >= comienzoSemana - 6) %>% arrange(desc(fecha)), booktabs = T, digits = 2, col.names = c('Fecha', 'MEP-AL30', 'MEP-GD30', 'CCL'), align = "cccc") %>% kable_styling()
pull(varSemanal,1)
mep_ccl %>% filter(fecha == comienzoSemana - 5 | fecha == finSemana)
mep_ccl %>% filter(fecha == comienzoSemana - 3 | fecha == finSemana)
mep_ccl %>% filter(fecha == comienzoSemana - 4 | fecha == finSemana)
varSemanal = mep_ccl %>% filter(fecha == comienzoSemana - 4 | fecha == finSemana) %>%
mutate(varAL = format((`MEP-AL30` / lag(`MEP-AL30`) - 1) * 100, digits = 3),
varGD = format((`MEP-GD30` / lag(`MEP-GD30`) - 1) * 100, digits = 3),
varCCL = format((CCL / lag(CCL) - 1) * 100, digits = 3)) %>%
filter(fecha == finSemana) %>%
select(varAL, varGD, varCCL)
varAnual = mep_ccl %>% filter(fecha == '2020-12-30' | fecha == finSemana) %>%
mutate(varAL = format((`MEP-AL30` / lag(`MEP-AL30`) - 1) * 100, digits = 4),
varGD = format((`MEP-GD30` / lag(`MEP-GD30`) - 1) * 100, digits = 4),
varCCL = format((CCL / lag(CCL) - 1) * 100, digits = 4)) %>%
filter(fecha == finSemana) %>%
select(varAL, varGD, varCCL)
ultimosValores = mep_ccl %>% filter(fecha == finSemana) %>% select(`MEP-AL30`, `MEP-GD30`, CCL)
ultAL30 = as.numeric(format(ultimosValores$`MEP-AL30`, digits = 5))
ultGD30 = as.numeric(format(ultimosValores$`MEP-GD30`, digits = 5))
ultCCL = as.numeric(format(ultimosValores$CCL, digits = 5))
valInicioSem = mep_ccl %>% filter(fecha == (comienzoSemana - 3)) %>% select(`MEP-AL30`, `MEP-GD30`, CCL)
inicAL30 = as.numeric(format(valInicioSem$`MEP-AL30`, digits = 5))
inicGD30 = as.numeric(format(valInicioSem$`MEP-GD30`, digits = 5))
inicCCL = as.numeric(format(valInicioSem$CCL, digits = 5))
pull(varSemanal,1)
mep_ccl %>% filter(fecha == comienzoSemana - 4 | fecha == finSemana)
varSemanal = mep_ccl %>% filter(fecha == comienzoSemana - 4 | fecha == finSemana) %>%
mutate(varAL = format((`MEP-AL30` / lag(`MEP-AL30`) - 1) * 100, digits = 4),
varGD = format((`MEP-GD30` / lag(`MEP-GD30`) - 1) * 100, digits = 4),
varCCL = format((CCL / lag(CCL) - 1) * 100, digits = 3)) %>%
filter(fecha == finSemana) %>%
select(varAL, varGD, varCCL)
pull(varSemanal,1)
varSemanal = mep_ccl %>% filter(fecha == comienzoSemana - 4 | fecha == finSemana) %>%
mutate(varAL = format((`MEP-AL30` / lag(`MEP-AL30`) - 1) * 100, digits = 5),
varGD = format((`MEP-GD30` / lag(`MEP-GD30`) - 1) * 100, digits = 5),
varCCL = format((CCL / lag(CCL) - 1) * 100, digits = 3)) %>%
filter(fecha == finSemana) %>%
select(varAL, varGD, varCCL)
pull(varSemanal,1)
varSemanal
varSemanal = mep_ccl %>% filter(fecha == comienzoSemana - 4 | fecha == finSemana) %>%
mutate(varAL = format((`MEP-AL30` / lag(`MEP-AL30`) - 1) * 100, digits = 3),
varGD = format((`MEP-GD30` / lag(`MEP-GD30`) - 1) * 100, digits = 3),
varCCL = format((CCL / lag(CCL) - 1) * 100, digits = 3)) %>%
filter(fecha == finSemana) %>%
select(varAL, varGD, varCCL)
varSemanal
gmervalPesos = merval %>% drop_na() %>%
ggplot(aes(x = fecha, y = cierre)) +
geom_line() +
theme_tq()  +
labs(title = "MERVAL en PESOS",
subtitle = '',
y = "", x = "") +
theme_economist() + labs(color = "") + scale_y_continuous(labels = comma, breaks = breaks_extended(15))+
geom_vline(xintercept = as.Date('2021-12-30'), color = 'blue', size = 1)
gmervalPesos
#### MERVAL en ccl
gmervalCCL = mervalCCL %>% drop_na() %>%
ggplot(aes(x = fecha, y = mervalCcl)) +
geom_line() +
theme_tq()  +
labs(title = "MERVAL en CCL (prom)",
subtitle = 'Calculado con promedio de 4 activos (GBYE).',
y = "", x = "") +
theme_economist() + labs(color = "") + scale_y_continuous(labels = comma)+
geom_vline(xintercept = as.Date('2021-12-30'), color = 'blue', size = 1)
gmervalCCL
#### MERVAL en ccl
gmervalCCL = mervalCCL %>% drop_na() %>%
ggplot(aes(x = fecha, y = mervalCcl)) +
geom_line() +
theme_tq()  +
labs(title = "MERVAL en CCL (prom)",
subtitle = 'Calculado con promedio de 4 activos (GBYE).',
y = "", x = "") +
theme_economist() + labs(color = "") + scale_y_continuous(labels = comma)+
geom_vline(xintercept = as.Date('2021-12-30'), color = 'blue', size = 2)
gmervalCCL
#### MERVAL en ccl
gmervalCCL = mervalCCL %>% drop_na() %>%
ggplot(aes(x = fecha, y = mervalCcl)) +
geom_line() +
theme_tq()  +
labs(title = "MERVAL en CCL (prom)",
subtitle = 'Calculado con promedio de 4 activos (GBYE).',
y = "", x = "") +
theme_economist() + labs(color = "") + scale_y_continuous(labels = comma)+
geom_vline(xintercept = as.Date('2021-12-30'), color = 'blue', size = 0.5)
gmervalCCL
gmervalPesos = merval %>% drop_na() %>%
ggplot(aes(x = fecha, y = cierre)) +
geom_line() +
theme_tq()  +
labs(title = "MERVAL en PESOS",
subtitle = '',
y = "", x = "") +
theme_economist() + labs(color = "") + scale_y_continuous(labels = comma, breaks = breaks_extended(15))+
geom_vline(xintercept = as.Date('2021-12-30'), color = 'blue', size = 0.5)
gmervalPesos = merval %>% drop_na() %>%
ggplot(aes(x = fecha, y = cierre)) +
geom_line() +
theme_tq()  +
labs(title = "MERVAL en PESOS",
subtitle = '',
y = "", x = "") +
theme_economist() + labs(color = "") + scale_y_continuous(labels = comma, breaks = breaks_extended(15))+
geom_vline(xintercept = as.Date('2021-12-30'), color = 'blue', size = 0.5)
gmervalPesos
varSemanal
